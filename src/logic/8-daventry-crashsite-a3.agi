#include "0-defines.aqi"

if(equaln(vRoomInited, valFalse)) {
    unanimate.all()

    assignn(vRoomInited, valTrue)

    load.view(viewCrashingPod)
    load.view(viewRoger)
    load.view(viewRogerSplash)
    load.view(viewRogerSwim)

    animate.obj(objEgo)

    set.view(objEgo, viewRoger)
    set.view(objCrashingPod, viewCrashingPod)

    draw(objEgo)
    draw(objCrashingPod)

    stop.cycling(objEgo)
    stop.cycling(objCrashingPod)

    set.cel(objCrashingPod, 7)

    position(objCrashingPod, 20, 140)
    set.priority(objCrashingPod, 6)

    if(equaln(vEgoX, 0)) {
        if(equaln(vEgoY, 0)){
            assignn(vEgoX, 13)
            assignn(vEgoY, 140)
        }
    }

    reset(fDrowning)

    position.v(objEgo, vEgoX, vEgoY)

    assignn(vEgoEdgeTouched, edgeNone)

    load.view(viewGlassSparkle)
    animate.obj(objGlassSparkle)
    start.cycling(objGlassSparkle)
    set.view(objGlassSparkle, viewGlassSparkle)    
    draw(objGlassSparkle)
 }

if(!has(invGlass)) {
    random(1, 125, vDiceRoll)

    if(equaln(vDiceRoll, 40)) {
        position(objGlassSparkle, 32, 147)
        draw(objGlassSparkle)

    }
    if(!equaln(vDiceRoll, 40)) {
        erase(objGlassSparkle)
    }
}

if(!equaln(vEgoEdgeTouched, edgeNone)) {
    if(equaln(vEgoEdgeTouched, edgeBottom)) {
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoY, 55)
        assignn(vEgoEdgeTouched, edgeNone)
        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picDavRiverBendA4)     
    }

    if(equaln(vEgoEdgeTouched, edgeLeft)) {
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 150)
        assignn(vEgoEdgeTouched, edgeNone)
        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picDavOgreF3)     
    }
}

if(isset(fSysEgoOnWater)) {
    if(!isset(fDrowning)){
        set(fDrowning)
        stop.motion(objEgo)
        set.view(objEgo, viewRogerSplash)
        assignn(vDeathReason, valXsFastWater)
        move.obj(objEgo, 25, 50, 2, fDead)
    }
}

if(equaln(vEgoDirection, directionStopped)) {
    stop.cycling(objEgo)
}
if(!equaln(vEgoDirection, directionStopped)) {
    start.cycling(objEgo)
}

if(said("look")) {
    print("The defining element of the setting is a crashed pod. The area is lush and green. It feels alien and familiar all at once. The air is breathable and amazingly clean. A river winds off to the east. There's a base or fortress of some sort in the distance.")
}

if(said("swim")) {
    if(isset(fSysEgoOnWater)) {
        print("The water is too fast here.")
    }
    if(!isset(fSysEgoOnWater)) {
        print("This may come as a surprise to you but you need to be IN the water in order to go swimming.")
    }
}

if(said("look", "room")) {
    print("The defining element of the setting is a crashed pod. The area is lush and green. It feels alien and familiar all at once. The air is breathable and amazingly clean. A river winds off to the east. There's a base or fortress of some sort in the distance.")
}
if(said("take", "glass")) {
    if(!has(invGlass)) {
        if(posn(objEgo, 28, 142, 37, 145)) {    
            get(invGlass)
            addn(vCurPoints, 1)    
            print("A small piece of highly reflective safety glass has broken away from the shield as it is known to do. You pick it up and carry it with you.")

        }
        if(!posn(objEgo, 28, 142, 37, 145)) {    
            print("You are not close enough.")
        }
    }
}

if(said("look", "pod")) {
    print("It WAS a pod. It's now a pile of twisted parts and wreckage that has been thoroughly plowed into the ground. Your handiwork so-to-speak.")
}
if(said("look", "water")) {
    print("The river is flowing off to the east and looks to have a strong current.")
}
if(said("look", "castle")) {
    print("There's a base or fortress of some kind off in the distance. You wonder how to get over there. Maybe there's someone there that could help you out.")
}
if(said("search", "pod")) {
    print("You search the debris from the crash. You find nothing useful except a small piece of glass.")
}
if(said("look", "sparkle")) {
    print("You search the debris from the crash. You find nothing useful except a small piece of glass.")
}    
return()

#message 1 "Crash site"