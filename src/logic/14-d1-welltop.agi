#include "0-defines.aqi"

if(equaln(vRoomInited, valFalse)) {
    unanimate.all()
    assignn(vRoomInited, valTrue)

    load.view(viewRoger)
    load.view(viewMist)
    load.view(viewBucket)

    animate.obj(objEgo)

    set.view(objEgo, viewRoger)
    set.view(objMist, viewMist)
    set.view(objMist2, viewMist)
    set.view(objMist3, viewMist)
    set.view(objMist4, viewMist)

    set.view(objBucket, viewBucket)

    stop.cycling(objMist)
    stop.cycling(objMist2)
    stop.cycling(objMist3)
    stop.cycling(objMist4)
    stop.cycling(objBucket)

    draw(objEgo)
    draw(objMist)
    draw(objMist2)
    draw(objMist3)
    draw(objMist4)
    draw(objBucket)

    if(equaln(vEgoX, 0)) {
        if(equaln(vEgoY, 0)){
            assignn(vEgoX, 100)
            assignn(vEgoY, 100)
        }
    }

    position(objMist, 1, 47)
    position(objMist2, 43, 47)
    position(objMist3, 85, 47)
    position(objMist4, 127, 47)
    position(objBucket, 38, 120)

    reset(fInBucket)
    reset(fDoAction)
    assignn(vEgoEdgeTouched, edgeNone)
    position.v(objEgo, vEgoX, vEgoY)
    set.horizon(50)
}

if(!equaln(vEgoEdgeTouched, edgeNone)) {
    if(equaln(vEgoEdgeTouched, edgeTop)) {
        print("You're a bit foggy here. You decide to turn back.")
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoY, 55)
        assignn(vEgoDirection, directionDown)
        set.dir(objEgo, vEgoDirection)
        position.v(objEgo, vEgoX, vEgoY)
        assignn(vEgoEdgeTouched, edgeNone)
    }

    if(equaln(vEgoEdgeTouched, edgeLeft)) {
        print("You're a bit foggy here. You decide to turn back.")
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 15)
        assignn(vEgoDirection, directionRight)
        set.dir(objEgo, vEgoDirection)
        position.v(objEgo, vEgoX, vEgoY)
        assignn(vEgoEdgeTouched, edgeNone)
    }

    if(equaln(vEgoEdgeTouched, edgeRight)) {
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 5)
        assignn(vEgoY, 100)
        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picDavWolfE1)     
    }

    if(equaln(vEgoEdgeTouched, edgeBottom)) {
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoY, 50)
        assignn(vEgoEdgeTouched, edgeNone)
        assignn(vRoomInited, valFalse)
        assignn(vCurrentRoom, picDavLakeD2)     
    }
}

if(equaln(vEgoDirection, directionStopped)) {
    stop.cycling(objEgo)
}
if(!equaln(vEgoDirection, directionStopped)) {
    start.cycling(objEgo)
}

if(said("look")) {
    print("There's an ancient well here. There's a thick fog to the north and west.")
}
if(said("look", "room")) {
    print("There's an ancient well here. There's a thick fog to the north and west.")
}
if(said("look", "fog")) {
    print("There's a thick fog here. It almost feels as much mental as it is physical. The more you look into it the more lost you feel.")
}
if(said("look", "well")) {
    print("The ancient well reaches deep into the earth. There's a bucket at the top of the well.")
}
if(said("look", "bucket")) {
    print("The bucket is old but looks sturdy and watertight.")
}
if(said("lower", "bucket")) {
    print("There's no crank here.")
}
// if(said("take", "bucket")) {
//     print("You don't need it.")
// }

if(said("enter", "bucket")) {
    if(posn(objEgo, 21, 105, 110, 145)) {    
        load.view(viewRogerBucket)
        erase(objBucket)
        set.view(objEgo, viewRogerBucket)
        position(objEgo, 37, 145)
        set.priority(objEgo, 11)
        stop.cycling(objEgo)
        set.cel(objEgo, 0)
        set(fInBucket)

        if(!isset(fPointsForWell)) {
            set(fPointsForWell)
            addn(vCurPoints, 1)
        }
    }
    if(!posn(objEgo, 21, 105, 110, 145)) {
        print("You are not close enough.")    
    }    
}

if(said("exit", "bucket")) {
    if(isset(fInBucket)){
        set.view(objEgo, viewRoger)
        set.view(objBucket, viewBucket)
        draw(objBucket)
        stop.cycling(objBucket)
        position(objEgo, 42, 110)
        position(objBucket, 38, 120)
    }
    if(!isset(fInBucket)){
        print("Say what?")
    }
}

if(said("get", "bucket")) {
    // GET IN and GET OUT are not working properly
    // this sucks because it overlaps with TAKE BUCKET
    // for the sake of the player let's go this route for now
    if(!isset(fInBucket)) {
        if(posn(objEgo, 21, 105, 110, 145)) {    
            load.view(viewRogerBucket)
            erase(objBucket)
            set.view(objEgo, viewRogerBucket)
            position(objEgo, 37, 145)
            set.priority(objEgo, 11)
            stop.cycling(objEgo)
            set.cel(objEgo, 0)
            set(fInBucket)

            if(!isset(fPointsForWell)) {
                set(fPointsForWell)
                addn(vCurPoints, 1)
            }
        }
        if(!posn(objEgo, 21, 105, 110, 145)) {
            print("You are not close enough.")    
        }        
    }
}

if(isset(fInBucket)){
    end.of.loop(objEgo, fDoAction)    
}

if(isset(fDoAction)) {
    assignn(vEgoDirection, directionStopped)
    get.posn(objEgo, vEgoX, vEgoY)
    assignn(vEgoX, 0)
    assignn(vEgoY, 0)
    assignn(vRoomInited, valFalse)
    assignn(vCurrentRoom, picDavWellBottom)   
}

return()

#message 1 "Welltop"
