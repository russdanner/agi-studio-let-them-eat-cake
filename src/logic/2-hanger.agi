#include "0-defines.aqi"

if(equaln(vRoomInited, valFalse)) {

    // debugging scenario: Get your orders with this flag high
    // assignn(vHasOrders, valTrue)
    // assignn(vSplat1Cleaned, valTrue)
    // assignn(vSplat2Cleaned, valTrue)
    // assignn(vCleanedUp, valTrue)

    // we're roger now. Drop Grahams inventory
    drop(invSummons)
    drop(invHat)
    drop(invTeapot)
    drop(invTeaCup)
    drop(invTea)

    unanimate.all()
    assignn(vRoomInited, valTrue)

    load.sound(sndWatchBeep)

    load.view(viewRoger)
    load.view(viewRogerSuitBroom)
    load.view(viewRogerSuitA)
    load.view(viewHangerSplat)
    load.view(viewBigShuttle)

    animate.obj(objEgo)

    set.view(objHangerSplat1, viewHangerSplat)
    set.view(objHangerSplat2, viewHangerSplat)
    set.view(objBigShuttle, viewBigShuttle)

    if(equaln(vEgoX, 0)) {
        if(equaln(vEgoY, 0)){
            assignn(vEgoX, 20)
            assignn(vEgoY, 100)
            assignn(vSweeping, valTrue)
            set(fWearingSuit)
            get(invBroom)
        }
    }

    if(equaln(vHasOrders, valFalse)) {
        assignn(vSplat1Cleaned, valFalse)
        assignn(vSplat2Cleaned, valFalse)
        assignn(vHasOrders, valFalse)
        assignn(vCleanedUp, valFalse)

        position(objHangerSplat1, 100, 150)
        position(objHangerSplat2, 40, 90)  
        
        print("What is going on here?! Your dreams get more and more wild. You find yourself in a castle fortress unlike anything you have ever seen. Your suit of armor seems to be made of some kind of magical cloth. The stars are so close and bright that you could almost reach out and touch them. HOW STRANGE?!? And.. you're a janitor... Seriously?! Wow! That Daventry clover tea really packs a punch. The longer your dream continues the more familiar the situation feels.")
    }

    if(isset(fWearingSuit)) {
        if(equaln(vSweeping, valTrue)) {
            set.view(objEgo, viewRogerSuitBroom)
        }
        if(equaln(vSweeping, valFalse)) {
            set.view(objEgo, viewRogerSuitA)
        }    
    }
    if(!isset(fWearingSuit)) {
        set.view(objEgo, viewRoger)
    }

    start.cycling(objEgo)

    stop.cycling(objHangerSplat1)
    stop.cycling(objHangerSplat2)
    stop.cycling(objBigShuttle)

    draw(objHangerSplat1)
    draw(objHangerSplat2)
    draw(objBigShuttle)
    draw(objEgo)

    position(objBigShuttle, 50, 120)
    set.priority(objBigShuttle, 9)
    set.priority(objHangerSplat1, 4)
    set.priority(objHangerSplat2, 4)

    position.v(objEgo, vEgoX, vEgoY)

    assignn(vTimer, 0)

    set.horizon(73) 

    reset(fAdrift)
    reset(fDecompressed)
}

if(said("look")) {
    print("You are standing in a large hangar bay. The hangar door is open to the coldness of space. A shuttle sits in the middle of the bay.")
}

if(said("sweep")) {
    if(has(invBroom)) {
        get.posn(objEgo, vEgoX, vEgoY)
        if(lessn(vEgoX, 75)) {
            subn(vEgoX, 10)            
        }
        if(greatern(vEgoX, 75)) {
            addn(vEgoX, 10)            
        }
        position.v(objEgo, vEgoX, vEgoY)    

        set.view(objEgo, viewRogerSuitBroom)
        assignn(vSweeping, valTrue)
        start.cycling(objEgo)    
    }
    if(!has(invBroom)) {
        print("You don't have the proper equipment on hand for that job.")
    }
}

if(!equaln(vSweeping, valTrue)){
    if(equaln(vEgoDirection, directionStopped)) {
        stop.cycling(objEgo)
    }
}
if(!equaln(vEgoDirection, directionStopped)) {
    start.cycling(objEgo)
}    

if(said("stop", "sweeping")) {
    get.posn(objEgo, vEgoX, vEgoY)
    if(lessn(vEgoX, 75)) {
        subn(vEgoX, 10)            
    }
    if(greatern(vEgoX, 75)) {
        addn(vEgoX, 10)            
    }
    position.v(objEgo, vEgoX, vEgoY)    
    
    set.view(objEgo, viewRogerSuitA)
    assignn(vSweeping, valFalse)
}

if(said("start", "sweeping")) {
    if(has(invBroom)) {
        get.posn(objEgo, vEgoX, vEgoY)
        if(lessn(vEgoX, 75)) {
            subn(vEgoX, 10)            
        }
        if(greatern(vEgoX, 75)) {
            addn(vEgoX, 10)            
        }
        position.v(objEgo, vEgoX, vEgoY)    
    
        set.view(objEgo, viewRogerSuitBroom)
        assignn(vSweeping, valTrue)
        start.cycling(objEgo)    
    }
    if(!has(invBroom)) {
        print("You don't have the proper equipment on hand for that job.")
    }
}

if(said("get", "pod")) {
    if(posn(objEgo, 31, 104, 50, 127)) {
        print("Get real... This is a serious spacecraft. Access to this craft requires the appropriate orders or serious clearance -- both of which you are seriously lacking.")
    }
    if(!posn(objEgo, 31, 104, 50, 127)) {
        print("You are too far away.")
    }
}

if(said("enter", "pod")) {
    if(posn(objEgo, 31, 104, 50, 127)) {
        print("Get real... This is a serious spacecraft. Access to this craft requires the appropriate orders or serious clearance -- both of which you are seriously lacking.")
    }
    if(!posn(objEgo, 31, 104, 50, 127)) {
        print("You are too far away.")
    }
}

if(posn(objEgo, 85, 139, 105, 151)) {
    if(!equaln(vSplat1Cleaned, valTrue)) {
        if(equaln(vSweeping, valFalse)) {
            // DEAD: Fuel foot
            assignn(vDeathReason,  valXsFuelFoot)
            set(fDead)
        }    
        if(equaln(vSweeping, valTrue)) {
            addn(vCurPoints, 1)
            assignn(vSplat1Cleaned, valTrue)
            erase(objHangerSplat1)

            if(equaln(vSplat2Cleaned, valTrue)) {
                assignn(vCleanedUp, valTrue)
            }
        }    
    }
}

if(posn(objEgo, 36, 80, 48, 95)) {
    if(!equaln(vSplat2Cleaned, valTrue)) {
        if(equaln(vSweeping, valFalse)) {
            // DEAD: Fuel foot
            assignn(vDeathReason,  valXsFuelFoot)
            set(fDead)
        }    
        if(equaln(vSweeping, valTrue)) {
            assignn(vSplat2Cleaned, valTrue)
            addn(vCurPoints, 1)
            erase(objHangerSplat2)

            if(equaln(vSplat1Cleaned, valTrue)) {
                assignn(vCleanedUp, valTrue)
            }
        }    
    }
}

if(said("look", "watch")) {
    get.posn(objEgo, vEgoX, vEgoY)
    assignn(vRoomInited, valFalse)
    assignn(vCurrentRoom, picWatch)
}

if(obj.in.box(objEgo, 151, 140, 155, 150)) {
    if(equaln(vHasOrders, valTrue)) {

        assignn(vSweeping, valFalse)

        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 10)
        assignn(vEgoY, 126)
        assignn(vRoomInited, valFalse)
        assignn(vEgoEdgeTouched, edgeNone)
        assignn(vCurrentRoom, picInnerBay)         
    }
    if(equaln(vHasOrders, valFalse)) {
        print("Look at that deck!! You better keep cleaning.")
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 146)
        assignn(vEgoDirection, directionLeft)
        set.dir(objEgo, vEgoDirection)
        position.v(objEgo, vEgoX, vEgoY)
        assignn(vEgoEdgeTouched, edgeNone)
    }
}

if(equaln(vCleanedUp, valTrue)) {
    if(equaln(vTimer, 100)) {
        if(!isset(fWatchHasBeeped)) {
            set(fWatchHasBeeped)
            sound(sndWatchBeep, fSoundDone)

            print("A long beep is emitted from the watch on your arm.")    
        }
    }
 
    if(!equaln(vHasOrders, valTrue)) {
        addn(vTimer, 1)
    }
}

if(!equaln(vEgoEdgeTouched, edgeNone)) {
    if(equaln(vEgoEdgeTouched, edgeTop)) {
        stop.cycling(objEgo)
        set.view(objEgo, viewRogerSuitA)
        set.priority(objEgo, 4)
        move.obj(objEgo, 100, 40, 1, fAdrift)
        // DEAD: ADRIFT 
        assignn(vDeathReason, valXsSpaceWalk)
        set(fDead)
    }
}
if(isset(fAdrift)) {
    erase(objEgo)
}

if(!isset(fWearingSuit)) {
    if(!isset(fDecompressing)) {
        // DEAD: DECOMP
        get.posn(objEgo, vEgoX, vEgoY)
        assignn(vEgoX, 100)
        reset(fDecompressed)
        reset(fDecompressOnce)
        move.obj.v(objEgo, vEgoX, vEgoY, 1, fDecompressing)
    }
}

if(isset(fDecompressing)) {
    if(!isset(fDecompressOnce)) {
        set(fDecompressOnce)
        stop.motion(objEgo)
        load.view(viewRogerExplode)
        set.view(objEgo, viewRogerExplode)
        end.of.loop(objEgo, fDecompressed)     
    }
}

if(isset(fDecompressed)) {
    erase(objEgo)
    assignn(vDeathReason, valXsNoSuitExplode)    
    set(fDead)
}


if(said("look", "panel")) {
    print("The panel is used to operate hangar bay equipment. It's meant to be operated by personnel assigned to flight operations which does not include janitorial staff.")
}
if(said("look", "space")) {
    print("Ah space... 'It's beautiful and big. Really big. You just won't believe how vastly hugely mind-bogglingly big it is.'")
}
if(said("look", "pod")) {
    print("Yep that's a shuttle alright. Always coming and going. You can't count the number of times you've had to clean up after the space-sick scum that frequent these shuttles. Speaking of shuttle related messes you wonder if this craft is the one that left puddles of fuel on the deck.")
}
if(said("look", "spill")) {
    if(equaln(vCleanedUp, valFalse)) {
        print("What a mess. There's fuel on the deck. It needs to be cleaned up.")
    }
    if(equaln(vCleanedUp, valTrue)) {
        print("A spill?! Not on your watch! Roger Wilco. Ace Janitor.")
    }
}

return()

#message 1 "Hanger-1"