[*********************************************************************
[
[ rm.DavWitchHouseD5
[
[ 
[
[*********************************************************************

[***************************************
[ LOCAL DEFINES
[***************************************

[ add local defines here

[***************************************
[ FIRST CYCLE ONLY
[***************************************
if(newRoom) {
    [ load, draw and discard the picture for the current room
    load.pic(currentRoom);
    draw.pic(currentRoom);
    discard.pic(currentRoom);

    unanimate.all();
    assignn(vRoomInited, 1);

    load.view(vw.Roger);
    load.view(vw.RogerSwim);
    load.view(vw.Mist);
    load.view(vw.WitchDoor);

    animate.obj(ego);
    animate.obj(objMist);
    animate.obj(objMist2);
    animate.obj(objMist3);
    animate.obj(objMist4);
    animate.obj(objWitchDoor);
   
    set.view(ego, vw.Roger);
    set.view(objMist, vw.Mist);
    set.view(objMist2, vw.Mist);
    set.view(objMist3, vw.Mist);
    set.view(objMist4, vw.Mist);
    set.view(objWitchDoor, vw.WitchDoor);
    set.cel(objWitchDoor, 0);

    stop.cycling(objMist);
    stop.cycling(objMist2);
    stop.cycling(objMist3);
    stop.cycling(objMist4);
    stop.cycling(objWitchDoor);

    if(equaln(vEgoX, 0)) {
        if(equaln(vEgoY, 0)) {
            assignn(vEgoX, 140);
            assignn(vEgoY, 130);
        }
    }

    reset(fDoAction);

    position(objMist, 1, 166);
    position(objMist2, 43, 166);
    position(objMist3, 84, 166);
    position(objMist4, 120, 166);
    position(objWitchDoor, 45, 129);

    position.v(ego, vEgoX, vEgoY);

    set.priority(objWitchDoor, 10);    

    draw(ego);    
    draw(objMist);
    draw(objMist2);
    draw(objMist3);
    draw(objMist4);
    draw(objWitchDoor);

    set.horizon(50);
    show.pic();
}

[***************************************
[ NON-INPUT CODE 
[***************************************

if(edgeEgoHit == BOTTOM_EDGE) {
    print("You're a bit foggy here. You decide to turn back.");
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoY, 155);
    assignn(egoDir, UP);
    erase(ego);
    position.v(ego, vEgoX, vEgoY);
    draw(ego);
}   

if(edgeEgoHit == TOP_EDGE) {
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoY, 150);
    assignn(vRoomInited, valFalse);
    new.room(rm.DavLakeFGMD4);   
}

if(edgeEgoHit == RIGHT_EDGE) {
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoX, 5);
    assignn(vRoomInited, valFalse);
    new.room(rm.DavWizardE5);     
}    

if(edgeEgoHit == LEFT_EDGE) {
    print("You're a bit foggy here. You decide to turn back.");
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoX, 15);
    assignn(egoDir, RIGHT);
    erase(ego);
    position.v(ego, vEgoX, vEgoY);
    draw(ego);
}

if(isset(fDoAction)) {
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoX, 50);
    assignn(vEgoY, 150);
    assignn(vRoomInited, valFalse);
    new.room(rm.DavWitchHouseInside);
}


[***************************************
[ PROCESS PLAYER INPUT
[***************************************
if (haveInput && !haveMatch && unknownWordNum == 0) {
    if(said("knock")) {
        if(posn(ego, 38, 128, 56, 135)) {
            print("There is no answer.");
        }
        else {
            print("You can't reach it from here.");
        }
    }

    if((said("look", "room") || said("look"))) {
        print("There's a house nestled in to a heavily wooded area. It seems to be made of gingerbread and candy. A thick flog extends to the west and south.");
    }

    if(said("look", "fog")) {
        print("There's a thick fog here. It almost feels as much mental as it is physical. The more you look into it the more lost you feel.");
    }

    if(said("look", "house")) {
        print("You are not quite sure what to make of it. It's a house made out of candy. It looks... sticky. As a janitor sticky bothers you.");
    }
    
    if(said("lick", "house")) {
        print("You give the house a lick. It looks better than it tastes.");
    }
    
    if(said("open", "door")) {
        if(posn(ego, 38, 128, 56, 135)) {
            end.of.loop(objWitchDoor, fDoAction);
        }
        else {
            print("You can't reach it from here.");
        }
    }
}

[***************************************
[ CHECK FOR AN EXIT CONDITION
[***************************************
:exit

return();

[***************************************
[ DECLARED MESSAGES
[***************************************
#message 1 "You see nothing of interest." 
