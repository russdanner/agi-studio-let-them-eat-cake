[*********************************************************************
[
[ rm.GrahamLawnNight
[
[ 
[
[*********************************************************************

[***************************************
[ LOCAL DEFINES
[***************************************

[ add local defines here

[***************************************
[ FIRST CYCLE ONLY
[***************************************
if(newRoom) {
    [ load, draw and discard the picture for the current room
    load.pic(currentRoom);
    draw.pic(currentRoom);
    discard.pic(currentRoom);
    
    [ the horizon defines the upper limit of ego's movement
    [set.horizon(0);
    
    [ add additional room initialization here
    load.view(vw.GrahamNoHat);
    load.view(vw.GrahamHatNoFeather);
    load.view(vw.Wolf);
    load.view(vw.GrahamHouseDoor);

    animate.obj(ego);
    animate.obj(objWolf1);
    animate.obj(objWolf2);
    animate.obj(objCabinDoor);

    set.view(objWolf1, vw.Wolf);
    set.view(objWolf2, vw.Wolf);
    set.view(objCabinDoor, vw.GrahamHouseDoor);

    stop.cycling(objWolf1);
    stop.cycling(objWolf2);
    stop.cycling(objCabinDoor);
    set.cel(objCabinDoor, 0);

    if(equaln(vEgoX, 0)) {
        if(equaln(vEgoY, 0)){
            assignn(vEgoX, 119);
            assignn(vEgoY, 126);
        }
    }

    if(isset(fWearingHat)) {
        set.view(ego, vw.GrahamHatNoFeather);
    }
    else {
        set.view(ego, vw.GrahamNoHat);
    }
    
    reset(fSoundDone);
    reset(fDoAction);
    reset(fGotcha);
    reset(fGotcha2);

    position.v(ego, vEgoX, vEgoY);

    position(objWolf1, 15, 40);
    position(objWolf2, 159, 167);
    position(objCabinDoor, 121, 130);
    set.priority(objCabinDoor, 4);
    set.priority(ego, 11);   

    draw(objCabinDoor);
    draw(ego);
        
    [ display the picture on screen
    show.pic();
}

[***************************************
[ NON-INPUT CODE 
[***************************************

if(!isset(fDead)) { 
    if(!obj.in.box(ego, 100, 116, 158, 130)) {
        if(!isset(fRunForIt)) {
            set(fRunForIt);
            load.sound(snd.MonsterAlert);
            sound(snd.MonsterAlert, fSoundDone);    
            set(fDoAction);
        }
    }

    if(isset(fSoundDone)) {
        if(!isset(fDoAction)) {
            set(fDoAction);
        }
    }

    if(isset(fDoAction)) {
        reset(fSoundDone);
        reset(fDoAction);
        draw(objWolf1);
        draw(objWolf2);
        start.cycling(objWolf1);
        follow.ego(objWolf1, 8, fGotcha);

        start.cycling(objWolf2);
        follow.ego(objWolf2, 3, fGotcha);
    }

    if(isset(fGotcha)) {
        erase(objWolf1);
        erase(objWolf2);
        reset(fGotcha);
        
        set(fDead); 
        assignn(vDeathReason, valXsWolfMunchGraham);
        load.view(vw.GrahamFightCloud);
        set.view(ego, vw.GrahamFightCloud);        
    }
}

[***************************************
[ PROCESS PLAYER INPUT
[***************************************
if (haveInput && !haveMatch && unknownWordNum == 0) {
    if(said("look")) {
        print("You are standing outside your house. It is dark out here. The landscape is cast in pale moonlight and shadow.");
    }
    if(said("look", "room")) {
        print("You are standing outside your house. It is dark out here. The landscape is cast in pale moonlight and shadow.");
    }
    
    if(said("wear", "hat")) {
        if(has("Hat")) {
            if(isset(fWearingHat)) {
                print("You are already wearing it.");
            }
            if(!isset(fWearingHat)) {
                set(fWearingHat);
                set.view(ego, vw.GrahamHatNoFeather);
                print("You put on your trusty hat!");
    
                if(!isset(fPointsForHatWear)) {
                    set(fPointsForHatWear);
                    addn(vCurrentScore, 1);    
                }
            }
        }
        if(!has("Hat")) {
            print("You don't have it.");
        }
    }   
    
    
    if(said("remove", "hat")) {
        if(has("Hat")) {
            if(!isset(fWearingHat)) {
                print("You are not wearing your hat.");
            }
            if(isset(fWearingHat)) {
                reset(fWearingHat);
                set.view(ego, vw.GrahamNoHat);
            }
        }
        if(!has("Hat")) {
            print("You don't have it.");
        }
    }  
    
    if(said("open", "door")) {
        if(obj.in.box(ego, 100, 116, 158, 130)) {
            get.posn(ego, vEgoX, vEgoY);
            assignn(vEgoX, 35);
            assignn(vEgoY, 110);
            reset(fWearingHat);
            assignn(vRoomInited, valFalse);
            new.room(rm.GrahamHouse);
        }
        if(!obj.in.box(ego, 100, 116, 158, 130)) {
            print("You are not close enough.");
        }
    }
}

[***************************************
[ CHECK FOR AN EXIT CONDITION
[***************************************
:exit

return();

[***************************************
[ DECLARED MESSAGES
[***************************************
#message 1 "You see nothing of interest." 
