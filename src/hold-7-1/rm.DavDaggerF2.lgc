[*********************************************************************
[
[ rm.DavDaggerF2
[
[ 
[
[*********************************************************************

[***************************************
[ LOCAL DEFINES
[***************************************

[ add local defines here

[***************************************
[ FIRST CYCLE ONLY
[***************************************
if(newRoom) {
    [ load, draw and discard the picture for the current room
    load.pic(currentRoom);
    draw.pic(currentRoom);
    discard.pic(currentRoom); 

    unanimate.all();
    assignn(vRoomInited, 1);

    load.view(vw.Roger);

    animate.obj(ego);

    set.view(ego, vw.Roger);

    if(equaln(vEgoX, 0)) {
        if(equaln(vEgoY, 0)) {
            assignn(vEgoX, 100);
            assignn(vEgoY, 100);
        }
    }

    random(1, 100, vDiceRoll); 

    reset(fGotcha);
    if(lessn(vDiceRoll, 50)) {
        load.view(vw.Witch);
        animate.obj(objMonster);
        set.view(objMonster, vw.Witch);
        position(objMonster, 80, 30);        
        draw(objMonster);

        follow.ego(objMonster, 8, fGotcha);   

        load.sound(snd.MonsterAlert);
        sound(snd.MonsterAlert, fSoundDone);            
    }

    position.v(ego, vEgoX, vEgoY);

    set.horizon(40);

    draw(ego);
    
    [ display the picture on screen
    show.pic();
}

[***************************************
[ NON-INPUT CODE 
[***************************************

if(isset(fGotcha)) {
    reset(fGotcha);
    if(!isset(fDead)) { 
        erase(ego);
        load.view(vw.WitchKill);
        set.view(objMonster,  vw.WitchKill);
        normal.motion(objMonster);
        assignn(vDeathReason, valXsWitchSnag);
        stop.cycling(objMonster);
        set.cel(objMonster, 0);
        end.of.loop(objMonster, fDead);
        move.obj(objMonster, 170, 20, 2, fDead);    
    }
}

if(edgeEgoHit == TOP_EDGE) {
    assignn(vEgoY, 160);
    assignn(vRoomInited, valFalse);
    new.room(rm.DavTreeF1);     
}

if(edgeEgoHit == LEFT_EDGE) {
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoY, 50);
    assignn(vRoomInited, valFalse);
    new.room(rm.DavBigLakeRightE2);  
}

if(edgeEgoHit == RIGHT_EDGE) {
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoX, 5);
    assignn(vRoomInited, valFalse);
    new.room(rm.DavCastleLeftA2);     
}

if(edgeEgoHit == BOTTOM_EDGE) {
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoY, 60);
    assignn(vRoomInited, valFalse);
    new.room(rm.DavOgreF3);     
}

[***************************************
[ PROCESS PLAYER INPUT
[***************************************
if (haveInput && !haveMatch && unknownWordNum == 0) {
    if(said("look")) {
        print("This is an open clearing. There's nothing particularly noteworthy here.");
    }
    if(said("look", "room")) {
        print("This is an open clearing. There's nothing particularly noteworthy here.");
    }
}

[***************************************
[ CHECK FOR AN EXIT CONDITION
[***************************************
:exit

return();

[***************************************
[ DECLARED MESSAGES
[***************************************
#message 1 "You see nothing of interest." 
