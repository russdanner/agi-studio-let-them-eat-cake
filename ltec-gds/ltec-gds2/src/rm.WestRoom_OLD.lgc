[*********************************************************************
[
[ rm.WestRoom
[
[ An example room. This room as some background art added (a table)
[ and an item that can be picked up by ego.
[
[*********************************************************************

[***************************************
[ LOCAL DEFINES
[***************************************
#define oTestItem                    o1

#define vTestItemRm                v220

[***************************************
[ FIRST CYCLE ONLY
[***************************************
if (newRoom) {
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);
  
  [ do basic room initialization
  call(lgc.RoomInit);
  
  [ add room-specific initialization here
  
  [ default horizon is 36; adjust it as needed
  [ set.horizon(36);
  
  [ load view used in the room
  load.view(vw.WestRoomArt);
  
  [ put a table in middle of room, include a control box
  add.to.pic(vw.WestRoomArt, 0, 0, 67, 149, 0, 0);
  
  
  [ if ego has not picked up the strange item, put it on 
  [ the table
  
  [ determine if the object is still in this room
  work = 1; [ reference to object #1
  get.room.v(work, vTestItemRm);
  
  [ if the strange colored cube is still in this room
  if (vTestItemRm == 3) {
    [ put it on the table
    animate.obj(oTestItem);
    set.view(oTestItem, vw.WestRoomArt);
    set.loop(oTestItem, 0);
    set.cel(oTestItem, 1);
    position(oTestItem, 74, 136);
    [ it doesn't block any other objects
    ignore.objs(oTestItem);
    set.priority(oTestItem, 13);
    draw(oTestItem);
    [ and it doesn't move or cycle
    stop.update(oTestItem);
  }
    
  [ set ego parameters, if different from lgc.RoomInit
  
  [ AGI will automatically position ego on the opposite
  [ edge when entering a new room, but if you want to manually
  [ position ego, do that here, before drawing ego
  
  [ add ego to the screen
  draw(ego);
  
  [ display the picture on screen
  show.pic();
}

[***************************************
[ NON-INPUT CODE 
[***************************************

[ add room specific statements here

[***************************************
[ PROCESS PLAYER INPUT
[***************************************

[ if player has provided input and match not yet found,
[ do said tests
if (haveInput && !haveMatch) {
  [ look
  if (said("look")) {
    print("There is an old wooden table in the middle of the room.");
  }
  
  [ look table
  if (said("look", "table")) {
    [ is ego close to the table?
    if (posn(ego, 68, 132, 93, 151)) {
      print("The table is covered with dust and scratches.");
      
      [ if the cube is still on the table
      if (vTestItemRm == 3) {
        print("There is a strange, colored cube on the table.");
      }
    } else {
      print("There is an old wooden table in the middle of the room.");
      
      [ if the cube is still on the table
      if (vTestItemRm == 3) {
        print("It looks like there is something on the table.");
      }
    }
  }
    
  [ look under table
  if (said("look", "under", "table")) {
    [ if ego is close enough
    if (posn(ego, 68, 132, 93, 151)) {
      print("There is a lot of gum stuck to the underside of the table. But nothing else of interest.");
    } else {
      print("You can't see under the table from here.");
    }
  }
    
  [ look cube
  if (said("look", "cube")) {
    [ if the cube is still on the table
    if (vTestItemRm == 3) {
      [ is ego close to the table?
      if (posn(ego, 68, 132, 93, 151)) {
        print("There is a strange, colored cube on the table. You wonder how it got there.");
      } 
      else {
        print("You're not sure, but from this distance the thing on the table looks like a cube.");
      }
    } else {
      [ reset match flag so the game functions logic can handle
      [ the input
      reset(haveMatch);
    }
  }  
    
  [ take cube
  if (said("take", "cube")) {
    [ if the cube is still on the table
    if (vTestItemRm == 3) {
      [ is ego close to the table?
      if (posn(ego, 68, 132, 93, 151)) {
        print("You carefully pick up the cube, and put it in your oversized pocket.");
        [ add it to player inventory
        [get("strange colored cube");
        [ remove it from the table
        erase(oTestItem);
        vTestItemRm = 0;
        
        [ score two points
        currentScore += 2;
      } else {
        print("You need to move closer to the table.");
      }
    } 
    else {
      print("You already have the cube. It's in your pocket.");
    }
  }  
}
  
[***************************************
[ CHECK FOR AN EXIT CONDITION
[***************************************
if (edgeEgoHit == RIGHT_EDGE) {
  new.room(rm.Entrance);  [ ##LE001##
}

:done
return();

[***************************************
[ DECLARED MESSAGES
[***************************************
