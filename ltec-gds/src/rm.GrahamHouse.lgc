[*********************************************************************
[ 
[ rm.GrahamHouse
[
[*********************************************************************

[***************************************
[ LOCAL DEFINES
[***************************************
[ none

[***************************************
[ FIRST CYCLE ONLY
[***************************************
if (newRoom) {
  [ load, draw and discard the picture resource for the current room
  load.pic(currentRoom);
  draw.pic(currentRoom);
  discard.pic(currentRoom);

  [ do basic room initialization
  call(lgc.RoomInit);
  
  load.view(vw.GrahamNoHat);
  load.view(vw.Summons);
  load.view(vw.Hat);
  load.view(vw.Teapot);
  load.view(vw.Teacup);
  load.view(vw.GrahamHouseWindow);
  load.view(vw.GrahamHouseDoor);
  load.view(vw.GrahamHatNoFeather);
  
  animate.obj(ego);
  animate.obj(objHat);
  animate.obj(objTeapot);
  animate.obj(objTeaCup);    
  animate.obj(objSummons);    
  animate.obj(objWindow);    
  animate.obj(objCabinDoor);    
  
  set.view(ego, vw.GrahamNoHat);
  set.view(objHat, vw.Hat);
  set.view(objTeapot, vw.Teapot);
  set.view(objTeaCup, vw.Teacup);
  set.view(objSummons, vw.Summons);
  set.view(objWindow, vw.GrahamHouseWindow);
  set.view(objCabinDoor, vw.GrahamHouseDoor);

  stop.cycling(objHat);
  stop.cycling(objTeaCup);
  stop.cycling(objSummons);
  stop.cycling(objWindow);
  stop.cycling(objCabinDoor);

  set.cel(objCabinDoor, 1);
  position(objCabinDoor, 26, 131);      
  position(objWindow, 90, 58);

  if(!has("Hat")) {
    position(objHat, 130, 125);
  }

  if(!has("Summons")) {
    position(objSummons, 80, 105);
  }
  
  position(objTeapot, 110, 87);
  position(objTeaCup, 55, 105);

  set.priority(objHat, 15);
  set.priority(objTeapot, 15);
  set.priority(objTeaCup, 15);
  set.priority(objSummons, 15);

  assignn(vSleeping, valFalse);
  assignn(vClockTicks, 0);
  
  position.v(ego, vEgoX, vEgoY);
  
  draw(ego);
  draw(objHat);
  draw(objTeapot);
  draw(objTeaCup);
  draw(objSummons);
  draw(objWindow);
  draw(objCabinDoor);

      
  [ The next 6 lines need only be in the first room of the game 
  if ((previousRoom == rm.Title || previousRoom == 0)) {
    [ when starting or restarting need to position ego
    position(ego, 74, 150);
    [ turn status line on during normal game play
    status.line.on();
     animationInterval = NORMAL_SPEED;
  }
  
  [ display the picture on screen
  show.pic();

}

[***************************************
[ NON-INPUT CODE 
[***************************************



if(!isset(fKingMessageDisplayed)) {
  print("It is getting late and you should go to bed but you cannot sleep. Earlier today you received a summons to appear at the castle to meet with King Edward for reasons unknown.");
  set(fKingMessageDisplayed);
}        
  
  [if(isset(fIsMorning)) {
  [      set.cel(objWindow, 1)
  [      position(objEgo, 100,80) 
  [      print("Thinking of the King you are jarred awake. It's morning. You must get to the castle to meet with King Edward!")
  [}
  [  set.cel(objCabinDoor, 1)
  [  position(objCabinDoor, 26, 131)

[***************************************
[ PROCESS PLAYER INPUT
[***************************************

[ if player has provided input and match not yet found,
[ do said tests
if (haveInput && !haveMatch) {  
    if(said("look")) {
        if(!has("Hat")) {
            print("This is Graham's home. It's one of many homes in the kingdom of Daventry. Graham keeps the place neat and tidy. In the center of the room is a large table. There's small counter with a hat on it in the corner.");
        }
        if(has("Hat")) {
            print("This is Graham's home. It's one of many homes in the kingdom of Daventry. Graham keeps the place neat and tidy. In the center of the room is a large table. There's small counter in the corner.");
        }
    }
    
    if(said("sleep")) {
        if(posn(ego, 75, 30, 115, 85)) {
            if(!equaln(vTeaDrank, valTrue)) {
                print("You are a bit on edge about the summons you received from the king. You can't sleep.");
            }
            if(equaln(vTeaDrank, valTrue)) {
                assignn(vSleeping, valTrue);
                assignn(vTimer, 0);
                assignn(vClockTicks, 0);
                addn(vCurrentScore, 1);    
                print("Having taken the tea you climb into bed and doze off.");
            }
        }
        if(!posn(ego, 75, 30, 115, 85)) {
            print("You're not close enough.");
        }
    }
    
    if(said("go", "sleep")) {
        if(posn(ego, 75, 30, 115, 85)) {
            if(!equaln(vTeaDrank, valTrue)) {
                print("You are a bit on edge about the summons you received from the king. You can't sleep.");
            }
            if(equaln(vTeaDrank, valTrue)) {
                assignn(vSleeping, valTrue);
                assignn(vTimer, 0);
                assignn(vClockTicks, 0);
                addn(vCurrentScore, 1)  ;  
                print("Having taken the tea you climb into bed and doze off.");
            }
        }
        if(!posn(ego, 75, 30, 115, 85)) {
            print("You're not close enough.");
        }
    }
    
    if(said("look", "room")) {
        if(!has("Hat")) {
            print("This is Graham's home. It's one of many homes in the kingdom of Daventry. Graham keeps the place neat and tidy. In the center of the room is a large table. There's small counter with a hat on it in the corner.");
        }
        if(has("Hat")) {
            print("This is Graham's home. It's one of many homes in the kingdom of Daventry. Graham keeps the place neat and tidy. In the center of the room is a large table. There's small counter in the corner.");
        }
    }
    if(said("look", "stove")) {
        if(has("Teapot")) {
            print("The stove is made of cast iron and keeps the room toasty.");
        }
        if(!has("Teapot")) {
            print("The stove is made of cast iron and keeps the room toasty. There's a teapot on top of the stove.");
        }
    }
    
    if(said("look", "table")) {
        if(has("Summons")) {
            if(!has("Teacup")) {
                print("There is a sturdy table here. A teacup sits on table");
            }
            if(has("Teacup")) {
                print("There is a sturdy table here.");
            }
        }
        if(!has("Summons")) {
            if(!has("Teacup")) {
                print("There is a sturdy table here. The summons you received from the King today lays on one side of the table and a teacup sits on the opposite side.");
            }
            if(has("Teacup")) {
                print("There is a sturdy table here. The summons you received from the King today lays on the table.");
            }
        }
    }
    
    if(said("open", "door")) {
        if(posn(ego, 16, 108, 35, 124)) {
            if(!has("Hat")) {
                print("You would never leave the house without your hat.");
            }
            if(has("Hat")) {
                if(isset(fIsMorning)) {
                    addn(vCurrentScore, 1);    
                    get.posn(ego, vEgoX, vEgoY);
                    assignn(vEgoX, 119);
                    assignn(vEgoY, 126);
                    assignn(vRoomInited, valFalse);
                    [new.room(rm.GrahamLawn);     
                }
                if(!isset(fIsMorning)) {
                    get.posn(ego, vEgoX, vEgoY);
                    assignn(vEgoX, 119);
                    assignn(vEgoY, 126);
                    assignn(vRoomInited, valFalse);
                    new.room(rm.GrahamLawnNight);     
                }
            }
        }
        if(!posn(ego, 16, 108, 35, 124)) {
            print("You can't do that from here.");
        }
    }
    
    if(said("wear", "hat")) {
        if(has("Hat")) {
            if(isset(fWearingHat)) {
                print("You are already wearing it.");
            }
            if(!isset(fWearingHat)) {
                set(fWearingHat);
                set.view(ego, vw.GrahamHatNoFeather);
                print("You put on your trusty hat!");
    
                if(!isset(fPointsForHatWear)) {
                    set(fPointsForHatWear);
                    addn(vCurrentScore, 1);    
                }
            }
        }
        if(!has("Hat")) {
            print("You don't have it.");
        }
    }   
    
    if(said("remove", "hat")) {
        if(has("Hat")) {
            if(!isset(fWearingHat)) {
                print("You are not wearing your hat.");
            }
            if(isset(fWearingHat)) {
                reset(fWearingHat);
                set.view(ego, vw.GrahamHatNoFeather);
            }
        }
        if(!has("Hat")) {
            print("You don't have it.");
        }
    }  
    
    if(said("take", "summons")) {
        if(posn(ego, 80, 100, 100, 130)) {
            if(has("Summons")) {
                print("You already have it.");
            }
            if(!has("Summons")) {
                print("You take the summons.");
                set(fHasSummons);
                get("Summons");
                erase(objSummons);
                addn(vCurrentScore, 1);        
            }
        }
        if(!posn(ego, 80, 100, 100, 130)) {
            print("Get closer.");
        }
    }
    
    if(said("take", "teapot")) {
        if(posn(ego, 104, 93, 123, 112)) {
            if(has("Teapot")) {
                print("You alread have it.");
            }
            if(!has("Teapot")) {
                print("You remove the teapot from the stove.");
                erase(objTeapot);
                get("Teapot");
                addn(vCurrentScore, 1);
            }
        }
        if(!posn(ego, 104, 93, 123, 112)) {
            print("Get closer.");
        }
    }
    
    if(said("take", "hat")) {
        if(posn(ego, 117, 131, 129, 150)) {
            print("You pocket your hat.");
            set(fHasHat);
            erase(objHat);
            get("Hat");
            addn(vCurrentScore, 1);
        }
        if(!posn(ego, 117, 131, 129, 150)) {
            print("You cannot reach it.");
        }
    }
    
    if(said("take", "teacup")) {
        if(posn(ego, 40, 107, 56, 135)) {
            erase(objTeaCup);
            if(equaln(vTeaPoured, valTrue)) {
                print("You pick up the tetakeacup full of hot clover tea and carry it with you.");
                get("Tea");
            }
            if(!equaln(vTeaPoured, valTrue)) {
                print("You pick up the teacup and carry it with you.");
                get("Teacup");            
            }
        }
        if(!posn(ego, 40, 107, 56, 135)) {
            print("It is not within your reach.");
        }
    }
    
    if(said("drop", "teacup")) {
        if(posn(ego, 40, 107, 56, 135)) {
            print("You place the teacup on the table.");
            draw(objTeaCup);
            drop("Teacup");
        }
        if(!posn(ego, 40, 107, 56, 135)) {
            print("Get closer.");
        }
    }
    
    if(said("pour", "tea")) {
        if(has("Teapot")) {
            if(has("Teacup")) {
                print("The tea is hot. Put the cup on the table.");
            }
            if(!has("Teacup")) {
                if(equaln(vTeaPoured, valTrue)) {
                    print("the teapot is empty.");
                }
                if(!equaln(vTeaPoured, valTrue)) {
                    if(posn(ego, 40, 107, 56, 135)) {
                        print("You pour a cup of hot tea.");
                        assignn(vTeaPoured, valTrue);
                        addn(vCurrentScore, 1);
                    }
                    if(!posn(ego, 40, 107, 56, 135)) {
                        print("You should get closer.");
                    }
                }
            }
        }
        if(!has("Teapot")) {
            print("You can't do that from here.");
        }
    }
    
    if(said("take", "tea")) {
        if(posn(ego, 40, 107, 56, 135)) {
            if(equaln(vTeaPoured, valTrue)) {
                get("Tea");
                erase(objTeaCup);
                print("Ok");
            }
            if(!equaln(vTeaPoured, valTrue)) {
                print("The cup is empty.");
            }
        }
        if(!posn(ego, 40, 107, 56, 135)) {
            if(equaln(vTeaPoured, valTrue)) {
                print("You are not close enough.");
            }
            if(!equaln(vTeaPoured, valTrue)) {
                print("There's tea in the teapot.");
            }
        }  
    }
    
    if(said("drink", "tea")) {
        if(!has("Tea")) {
            print("You don't have it.");
        }
        if(has("Tea")) {
            print("You drink the tea. In a few minutes you begin to feel much more relaxed.");
            assignn(vTeaDrank, valTrue);
            drop("Tea");
            get("Teacup");
            addn(vCurrentScore, 1); 
        }
    }    
}


if(equaln(vSleeping, valTrue)) {
  if(equaln(vTimer, 0)) {
    if(equaln(vClockTicks, 0)) {
      erase(ego);
      load.view(vw.GrahamSleep);
      set.view(objGrahamSleep, vw.GrahamSleep);
      animate.obj(objGrahamSleep);  
      position(objGrahamSleep, 110, 82);
      set.priority(objGrahamSleep, 15);
      draw(objGrahamSleep);
    }
  
    if(equaln(vClockTicks, 1)) {
      print("Time passes...");
    }
  
    if(equaln(vClockTicks, 2)) {
      print("More time passes...");
    }

    if(equaln(vClockTicks, 3)) {
      print("What on earth was in that tea?!?");
    }

    if(equaln(vClockTicks, 4)) {
      assignn(vEgoX, 0);
      assignn(vEgoY, 0);
      assignn(vRoomInited, valFalse);
      new.room(rm.InnerHanger);
    } 
  }
}

if(equaln(vTimer, 0)) {
  if(equaln(vClockTicks, 20)) {
    print("It sure is getting late");
  }
  if(equaln(vClockTicks, 40)) {
    print("If you don't get to sleep you'll be a real mess in the morning.");
  }
  if(equaln(vClockTicks, 60)) {
      [DEAD: OVERSLEPT
      assignn(vDeathReason, valXsOversleep);
      set(fDead);
  }
}

:done
return();

[ DECLARED MESSAGES
[***************************************
