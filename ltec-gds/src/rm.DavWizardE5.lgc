[*********************************************************************
[
[ rm.DavWizardE5
[
[ 
[
[*********************************************************************

[***************************************
[ LOCAL DEFINES
[***************************************

[ add local defines here

[***************************************
[ FIRST CYCLE ONLY
[***************************************
if(newRoom) {
    [ load, draw and discard the picture for the current room
    load.pic(currentRoom);
    draw.pic(currentRoom);
    discard.pic(currentRoom);
    
    unanimate.all();
    assignn(vRoomInited, 1);

    load.view(vw.Roger);
    load.view(vw.Mist);
   
    set.view(ego, vw.Roger);
    set.view(objMist, vw.Mist);
    set.view(objMist2, vw.Mist);
    set.view(objMist3, vw.Mist);
    set.view(objMist4, vw.Mist);

    animate.obj(ego);
    animate.obj(objMist);
    animate.obj(objMist2);
    animate.obj(objMist3);
    animate.obj(objMist4);

    stop.cycling(objMist);
    stop.cycling(objMist2);
    stop.cycling(objMist3);
    stop.cycling(objMist4);

    if(equaln(vEgoX, 0)) {
        if(equaln(vEgoY, 0)) {
            assignn(vEgoX, 100);
            assignn(vEgoY, 110);
        }
    }

    position(objMist, 1, 166);
    position(objMist2, 43, 166);
    position(objMist3, 84, 166);
    position(objMist4, 120, 166);

    random(1, 100, vDiceRoll); 

    reset(fGotcha);
    
    if(lessn(vDiceRoll, 50)) {
        load.view(vw.Wizard);
        set.view(objMonster, vw.Wizard);
        animate.obj(objMonster);
        draw(objMonster);
        position(objMonster, 15, 50);        
        follow.ego(objMonster, 2, fGotcha);  

        load.sound(snd.MonsterAlert);
        sound(snd.MonsterAlert, fSoundDone);    
    }

    position.v(ego, vEgoX, vEgoY);

    draw(ego);
    draw(objMist);
    draw(objMist2);
    draw(objMist3);
    draw(objMist4);

    set.horizon(50);

    show.pic();
}

[***************************************
[ NON-INPUT CODE 
[***************************************

if(edgeEgoHit == BOTTOM_EDGE) {
    print("You're a bit foggy here. You decide to turn back.");
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoY, 155);
    assignn(egoDir, UP);
    erase(ego);
    position.v(ego, vEgoX, vEgoY);
    draw(ego);
}   

if(edgeEgoHit == TOP_EDGE) {
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoY, 150);
    assignn(vRoomInited, valFalse);
    new.room(rm.DavRockE4);   
}

if(edgeEgoHit == RIGHT_EDGE) {
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoX, 5);
    assignn(vRoomInited, valFalse);
    new.room(rm.DavWalnutF5);     
}    

if(edgeEgoHit == LEFT_EDGE) {
    get.posn(ego, vEgoX, vEgoY);
    assignn(vEgoX, 150);
    assignn(vRoomInited, valFalse);
    new.room(rm.DavWitchHouseD5);     
}

if(isset(fGotcha)) {
    reset(fGotcha);
    if(!isset(fDead)) {         
        [stop.cycling(objMonster);
        [stop.motion(objEgo);
        [stop.motion(objMonster);
        load.view(vw.RogerStoned);
        set.view(ego, vw.RogerStoned);
        end.of.loop(ego, fRogerStoned);  
    }
}

if(isset(fRogerStoned)) {
    assignn(egoDir, STOPPED);
    assignn(vDeathReason, valXsStoned);
    set(fDead);
    wander(objMonster);
}


[***************************************
[ PROCESS PLAYER INPUT
[***************************************
if (haveInput && !haveMatch && unknownWordNum == 0) {
    if((said("look", "room") || said("look"))) {
        print("You are at the edge of a thick forest. A clearing sits aside of the wooded area. There's a thick fog to the south.");
    }

    if(said("look", "fog")) {
        print("There's a thick fog here. It almost feels as much mental as it is physical. The more you look into it the more lost you feel.");
    }
}

[***************************************
[ CHECK FOR AN EXIT CONDITION
[***************************************
:exit

return();

[***************************************
[ DECLARED MESSAGES
[***************************************
#message 1 "You see nothing of interest." 
