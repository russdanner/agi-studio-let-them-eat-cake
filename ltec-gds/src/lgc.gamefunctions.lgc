[*********************************************************************
[
[ lgc.GameFunctions
[
[ You should use this logic to perform any game specific functions, 
[ such as counting down timers, etc and processing player input 
[ related to the game (such as examining/using inventory items) and 
[ any other things that are required in several rooms that you don't
[ want to duplicate in each room.
[
[ This logic is called from logic 0, on every cycle, unless 
[ disableGameFunctions is set.
[
[ Sierra did not use a separate logic for all this - they just did it
[ all from logic 0. I find it is neater this way, as you can keep your
[ game specific processing separate from other system-related things
[ (although these may require some modification for your game). Also,
[ this makes logic 0 easier to manage.
[
[*********************************************************************

#define entryDelay v240

[***************************************
[ LOCAL DEFINES
[***************************************
[ none

[***************************************
[ MAIN CODE BLOCK 
[***************************************

[ if a new room was visited for first time
[if (!egoExplored && currentRoom != rm.Entrance) {
[  [ if ego has been in the room long enough, award one score point for
[  [ exploration
[  if (elapsedSeconds != oldSeconds) {
[    [ increment delay counter until ~2 seconds has passed
[    entryDelay += 1;
[    if (entryDelay == 2) {
[      print("You have explored a new room in this world! Good job!");
[      currentScore += 1;
[      set(egoExplored);
[      entryDelay = 0;
[    }
[  }
[}
  
[***************************************
[ PROCESS PLAYER INPUT
[***************************************

[ if player has provided input and match not yet found (regardless
[ of any unknown words)
[ do said tests
if (haveInput && !haveMatch) {
  [ put all generic said tests (those that apply in all rooms) here
  
  [ if player says any dirty words
  if ((said("bad word", "rol") || 
       said("anyword", "bad word", "rol") || 
       said("anyword", "anyword", "bad word", "rol") || 
       said("anyword", "anyword", "anyword", "bad word", "rol") || 
       said("anyword", "anyword", "anyword", "anyword", "bad word", "rol") || 
       said("anyword", "anyword", "anyword", "anyword", "anyword", "bad word", "rol"))) {
    ++badWordCount;
    if (badWordCount == 1) {
      [ first warning
      print("I am going to tell on you!");
    }
    if (badWordCount == 2) {
      [second warning
      print("Don't say anymore words like that!");
    }
    if (badWordCount == 3) {
      [ no more warnings
      print("Don't say I didn't warn you.");
      quit(1);
    }
  }
  
    reset(fShowInvItem);
    assignn(vInvShowItem, 0);
    
    if(said("look", "pot")) {
        if(has("Teapot")) {
            assignn(vInvShowItem, vw.InvTeapot);
            set(fShowInvItem);    
        }
        if(!has("Teapot")) {
            print("You don't have it.");    
        }
    }
    if(said("look", "hat")) {
        if(has("Hat")) {
            assignn(vInvShowItem, vw.InvHat);
            set(fShowInvItem);
        }
        if(!has("Hat")) {
            print("You don't have it.");    
        }
    }
    if(said("look", "summons")) {
        if(has("Summons")) {
            assignn(vInvShowItem, vw.InvSummons);
            set(fShowInvItem);
        }
        if(!has("Summons")) {
            print("You don't have it.");    
        }
    }
    if(said("look", "tea")) {
        if(has("Tea")) {
            assignn(vInvShowItem, vw.InvTea);
            set(fShowInvItem);
        }
        if(!has("Tea")) {
            print("You don't have it.");    
        }
    }
    if(said("look", "cup")) {
        if(has("Teacup")) {
            assignn(vInvShowItem, vw.InvTeacup);
            set(fShowInvItem);
        }
        if(!has("Teacup")) {
            print("You don't have it.");    
        }
    }
    if(said("look", "broom")) {
        if(has("Broom")) {
            assignn(vInvShowItem, vw.InvBroom);
            set(fShowInvItem);
        }
        if(!has("Broom")) {
            print("You don't have it.");  
        }
    }
    if(said("look", "keycard")) {
        if(has("Keycard")) {
            print("The keycard is a flat rectangular piece of synthetic material. Written in tiny letters is 'B. H. S. S.'");
        }
        if(!has("Keycard")) {
            print("What is this keycard that you speak of? You don't have a keycard.");    
        }
    }
    if(said("look", "glass")) {
        if(has("Glass")) {
            assignn(vInvShowItem, vw.InvGlass);
            set(fShowInvItem);
        }
        if(!has("Glass")) {
            print("You don't have it.");    
        }
    }
    if(said("look", "cake")) {
        if(has("Cake")) {
            assignn(vInvShowItem, vw.InvCake);
            set(fShowInvItem);
        }
        if(!has("Cake")) {
            print("You don't have it.");    
        }
    }
    if(said("look", "ink")) {
        if(has("Ink")) {
            assignn(vInvShowItem, vw.InvInk);
            set(fShowInvItem);
        }
        if(!has("Ink")) {
            print("You don't have it.");    
        }
    }
    if(said("look", "quill")) {
        if(has("Quill")) {
            assignn(vInvShowItem, vw.InvQuill);
            set(fShowInvItem);
        }
        if(!has("Quill")) {
            print("You don't have it.");    
        }
    }
    if(said("look", "feather")) {
        if(has("Feather")) {
            assignn(vInvShowItem, vw.InvFeather);
            set(fShowInvItem);
        }
        if(!has("Feather")) {
            print("You don't have it.");    
        }
    }
    if(said("look", "paper")) {
        if(has("Paper")) {
            assignn(vInvShowItem, vw.InvPaper);
            set(fShowInvItem);
        }
        if(!has("Paper")) {
            print("You don't have it.");    
        }
    }
    if(said("look", "invitation")) {
        if(has("Invitation")) {
            assignn(vInvShowItem, vw.InvInvitation);
            set(fShowInvItem);
        }
        if(!has("Invitation")) {
            print("You don't have it.");    
        }
    }
    
    if(isset(fShowInvItem)) {
        if(equaln(vInvShowItem, vw.InvTeapot)) {
            assignn(vInvView, vw.InvTeapot);
            if(equaln(vTeaPoured, valTrue)) {
                print("This is a simple empty blue teapot");
            }
            if(!equaln(vTeaPoured, valTrue)) {
                print("This is a simple blue teapot full of a hot fragrant tea made from the wild clover from the lands of Daventry.");
            }
        }
        if(equaln(vInvShowItem, vw.InvHat)) {
            assignn(vInvView, vw.InvHat);
            print("Your trusty hat! Wow. You love this hat. It's triangular and blue.");
        }
        if(equaln(vInvShowItem, vw.InvSummons)) {
            assignn(vInvView, vw.InvSummons);
            print("This ornate parchment is a summons from the king that demands an audience with you first thing in the morning");
        }
        if(equaln(vInvShowItem, vw.InvTea)) {
            assignn(vInvView, vw.InvTea);
            if(equaln(vTeaPoured, valTrue)) {
                if(equaln(vTeaDrank, valTrue)) {
                    print("Closer inspection of the cup reveals that it is indeed... a cup.");
                }
                if(!equaln(vTeaDrank, valTrue)) {
                    print("The cup is full of a hot fragrant tea made from the wild clover from the lands of Daventry.");
                }
            }
            if(!equaln(vTeaPoured, valTrue)) {
                print("Yep. It's a cup alright.");
            }
        }
        if(equaln(vInvShowItem, vw.InvTeacup)) {
            assignn(vInvView, vw.InvTeacup);
            if(equaln(vTeaPoured, valTrue)) {
                if(equaln(vTeaDrank, valTrue)) {
                    print("Closer inspection of the cup reveals that it is indeed... a cup.");
                }
                if(!equaln(vTeaDrank, valTrue)) {
                    print("The cup is full of a hot fragrant tea made from the wild clover from the lands of Daventry.");
                }
            }
            if(!equaln(vTeaPoured, valTrue)) {
                print("Yep. This is a cup alright.");
            }
        }
        if(equaln(vInvShowItem, vw.InvBroom)) {
            assignn(vInvView, vw.InvBroom);
            print("This is a standard issue StarCon broom. You love a good broom! It's a key component of any janitorial arsenal. The code `IBA` is stamped into the handle of the broom.");
        }
        if(equaln(vInvShowItem, vw.InvCake)) {
            assignn(vInvView, vw.InvCake);
            print("This is a delicious looking birthday cake.");
        }
        if(equaln(vInvShowItem, vw.InvInk)) {
            assignn(vInvView, vw.InvInk);
            print("This is an old bottle full of black fluid. The label on the bottle says Ink.");
        }
        if(equaln(vInvShowItem, vw.InvQuill)) {
            assignn(vInvView, vw.InvQuill);
            print("This is a feather you have sharpened into a quill -- an ancient implement of writing.");
        }
        if(equaln(vInvShowItem, vw.InvFeather)) {
            assignn(vInvView, vw.InvFeather);
            print("This is a beautiful red feather.");
        }
        if(equaln(vInvShowItem, vw.InvPaper)) {
            assignn(vInvView, vw.InvPaper);
            print("This is a blank piece of paper.");
        }
    }
    if(isset(fShowInvItem)) {
        reset(fShowInvItem);
        reset(fWaitForCloseInv);
        assignn(vKeyPressed, 0);
    
        if(equaln(vInvShowItem, vw.InvGlass)) {
            assignn(vInvView, vw.InvGlass);
            if(isset(fGlassIsSharp)) {
                print("This is a piece of highly reflective view shield glass from the pod. You have crafted a sharp knife like edge on it.");
            }
            if(!isset(fGlassIsSharp)) {
                print("This is a piece of highly reflective view shield glass from the pod. Due to its special design there are no sharp edges.");
            }
        }
        if(equaln(vInvShowItem, vw.InvInvitation)) {
            assignn(vInvView, vw.InvInvitation);
            print("This is a forged invitation to the castle.");
        }
    
        load.view.v(vInvView);
    
        set.view.v(objInv, vInvView);
    
        stop.cycling(objInv);
        draw(objInv);
        set.priority(objInv, 15);
        position(objInv, 65, 155);
        set(fWaitForCloseInv);            
    }
    if(isset(fWaitForCloseInv)) {
        if(greatern(vKeyPressed, 0)) {
            reset(fWaitForCloseInv);
             erase(objInv);
        }
    }
  
 
  
  [ look anything
  if ((said("look", "anyword") || said("look", "anyword", "rol"))) {
    print("What? Where?");
  }
  
  [ get anything
  if ((said("get", "anyword") || said("get", "anyword", "rol"))) {
    print("You can't get that here!");
  }
  
  [ use anything
  if ((said("use", "anyword") || said("use", "anyword", "rol"))) {
    print("What do you want me to do with it?");
  }
}
  
:done
return();

[***************************************
[ DECLARED MESSAGES
[***************************************
